{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home() {\n  var _useState = useState(20),\n      _useState2 = _slicedToArray(_useState, 2),\n      minutes = _useState2[0],\n      setMinutes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      seconds = _useState4[0],\n      setSeconds = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayMessage = _useState6[0],\n      setDisplayMessage = _useState6[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          var _minutes = displayMessage ? 24 : 4;\n\n          var _seconds = 59;\n          setSeconds(_seconds);\n          setMinutes(_minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n  var timerMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var timerSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: timerMinutes + \" : \" + timerSeconds\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return setisStart(true);\n      },\n      title: \"Learn More\",\n      color: \"#841584\"\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/evan/dev/react/react-native/default/src/view/home.jsx"],"names":["React","useState","useEffect","Home","minutes","setMinutes","seconds","setSeconds","displayMessage","setDisplayMessage","interval","setInterval","clearInterval","timerMinutes","timerSeconds","setisStart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAyC,OAAzC;;;;;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAE3B,kBAA8BF,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AACF,mBAA8BJ,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4CN,QAAQ,CAAC,KAAD,CAApD;AAAA;AAAA,MAAOO,cAAP;AAAA,MAAuBC,iBAAvB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC/BC,MAAAA,aAAa,CAACF,QAAD,CAAb;;AAEA,UAAIJ,OAAO,KAAK,CAAhB,EAAmB;AACjB,YAAIF,OAAO,KAAK,CAAhB,EAAmB;AACjBG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,SAHD,MAGO;AACL,cAAIA,QAAO,GAAGI,cAAc,GAAG,EAAH,GAAQ,CAApC;;AACA,cAAIF,QAAO,GAAG,EAAd;AAEAC,UAAAA,UAAU,CAACD,QAAD,CAAV;AACAD,UAAAA,UAAU,CAACD,QAAD,CAAV;AACAK,UAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD;AACF,OAZD,MAYO;AACLD,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF,KAlByB,EAkBvB,IAlBuB,CAA1B;AAmBD,GApBQ,EAoBN,CAACA,OAAD,CApBM,CAAT;AAsBA,MAAMO,YAAY,GAAGT,OAAO,GAAG,EAAV,SAAmBA,OAAnB,GAA+BA,OAApD;AACA,MAAMU,YAAY,GAAGR,OAAO,GAAG,EAAV,SAAmBA,OAAnB,GAA+BA,OAApD;AAIE,SACI,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAA,gBAAOO,YAAY,GAAG,KAAf,GAAuBC;AAA9B,MADJ,EAEI,KAAC,MAAD;AACV,MAAA,OAAO,EAAE;AAAA,eAAMC,UAAU,CAAC,IAAD,CAAhB;AAAA,OADC;AAEV,MAAA,KAAK,EAAC,YAFI;AAGV,MAAA,KAAK,EAAC;AAHI,MAFJ;AAAA,IADJ;AAUH","sourcesContent":["import React , {useState, useEffect}from 'react'\nimport { View, Text, Button } from 'react-native'\n\nexport default function Home() {\n\n    const [minutes, setMinutes] = useState(20);\n  const [seconds, setSeconds] = useState(0);\n  const [displayMessage, setDisplayMessage] = useState(false);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let minutes = displayMessage ? 24 : 4;\n          let seconds = 59;\n\n          setSeconds(seconds);\n          setMinutes(minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  \n\n    return (\n        <View>\n            <Text>{timerMinutes + \" : \" + timerSeconds}</Text>\n            <Button\n  onPress={() => setisStart(true)}\n  title=\"Learn More\"\n  color=\"#841584\"\n/>\n        </View>\n    )\n}\n     "]},"metadata":{},"sourceType":"module"}