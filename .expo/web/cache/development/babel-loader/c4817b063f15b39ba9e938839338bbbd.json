{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _TextInput = _interopRequireDefault(require(\"react-native-web/dist/exports/TextInput\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar authService = _interopRequireWildcard(require(\"../service/auth.service\"));\n\nvar _jsxFileName = \"/Users/evan/dev/react/react-native/default/src/view/login.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Login(_ref) {\n  var setIsConnected = _ref.setIsConnected;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = (0, _react.useState)({}),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var login = function login() {\n    var data;\n    return _regenerator.default.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(authService.signin(username, password));\n\n          case 2:\n            data = _context.sent;\n\n            if (data) {\n              console.log(data);\n              setUser(data);\n              setIsConnected(true);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_View.default, {\n    styles: styles.contenaire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Text.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"username :\"), _react.default.createElement(_TextInput.default, {\n    autoCapitalize: 'none',\n    onChangeText: setUsername,\n    styles: styles.input,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_Text.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"password :\"), _react.default.createElement(_TextInput.default, {\n    autoCapitalize: 'none',\n    onChangeText: setPassword,\n    styles: styles.input,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_Button.default, {\n    title: \"login\",\n    onPress: function onPress() {\n      return login();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _StyleSheet.default.create({\n  contenaire: {\n    width: 400,\n    flex: 1,\n    backgroundColor: \"green\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/evan/dev/react/react-native/default/src/view/login.jsx"],"names":["Login","setIsConnected","username","setUsername","password","setPassword","user","setUser","login","authService","signin","data","console","log","styles","contenaire","input","StyleSheet","create","width","flex","backgroundColor","height","margin","borderWidth","padding"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;AAEe,SAASA,KAAT,OAAiC;AAAA,MAAjBC,cAAiB,QAAjBA,cAAiB;;AAC5C,kBAAgC,qBAAS,EAAT,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgC,qBAAS,EAAT,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAAwB,qBAAS,EAAT,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,KAAK,GAAI,SAATA,KAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACWC,WAAW,CAACC,MAAZ,CAAmBR,QAAnB,EAA6BE,QAA7B,CADX;;AAAA;AACLO,YAAAA,IADK;;AAEX,gBAAGA,IAAH,EAAQ;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,cAAAA,OAAO,CAACI,IAAD,CAAP;AACAV,cAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAUF,SACE,6BAAC,aAAD;AAAM,IAAA,MAAM,EAAEa,MAAM,CAACC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,6BAAC,kBAAD;AAAW,IAAA,cAAc,EAAE,MAA3B;AAAmC,IAAA,YAAY,EAAEZ,WAAjD;AAA8D,IAAA,MAAM,EAAEW,MAAM,CAACE,KAA7E;AAAoF,IAAA,KAAK,EAAEd,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE,6BAAC,kBAAD;AAAW,IAAA,cAAc,EAAE,MAA3B;AAAmC,IAAA,YAAY,EAAEG,WAAjD;AAA8D,IAAA,MAAM,EAAES,MAAM,CAACE,KAA7E;AAAoF,IAAA,KAAK,EAAEZ,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,6BAAC,eAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAII,KAAK,EAAT;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,IAAMM,MAAM,GAAGG,oBAAWC,MAAX,CAAkB;AAC3BH,EAAAA,UAAU,EAAC;AACTI,IAAAA,KAAK,EAAC,GADG;AAETC,IAAAA,IAAI,EAAC,CAFI;AAGTC,IAAAA,eAAe,EAAC;AAHP,GADgB;AAM3BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ;AANoB,CAAlB,CAAf","sourcesContent":["import { View, Text,StyleSheet, TextInput, Button } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport * as authService from '../service/auth.service'\n\nexport default function Login({setIsConnected}) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    \n    const [user, setUser] = useState({})\n\n    const login =  async () =>{\n        const data =    await authService.signin(username, password)\n        if(data){\n          console.log(data)\n          setUser(data);\n          setIsConnected(true);\n        }\n        \n    }\n  \n  return (\n    <View styles={styles.contenaire}>\n\n      <Text>username :</Text>\n      <TextInput autoCapitalize={'none'} onChangeText={setUsername} styles={styles.input} value={username}/>\n      <Text>password :</Text>\n      <TextInput autoCapitalize={'none'} onChangeText={setPassword} styles={styles.input} value={password}/>\n      <Button title=\"login\" onPress={()=>login()}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n      contenaire:{\n        width:400,\n        flex:1,\n        backgroundColor:\"green\"\n      },\n      input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n      },\n})\n"]},"metadata":{},"sourceType":"script"}