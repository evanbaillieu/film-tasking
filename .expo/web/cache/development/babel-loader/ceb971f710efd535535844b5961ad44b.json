{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"@expo/vector-icons/MaterialCommunityIcons\"));\n\nvar _ListFilm = _interopRequireDefault(require(\"./view/ListFilm\"));\n\nvar _addFilm = _interopRequireDefault(require(\"./view/addFilm\"));\n\nvar _landing = _interopRequireDefault(require(\"./view/landing\"));\n\nvar _login = _interopRequireDefault(require(\"./view/login\"));\n\nvar _registeur = _interopRequireDefault(require(\"./view/registeur\"));\n\nvar _user = require(\"./helper/user.storage\");\n\nvar _profil = _interopRequireDefault(require(\"./view/profil\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/evan/dev/react/react-native/default/src/index.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Stack = (0, _stack.createStackNavigator)();\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\n\nvar Main = function Main() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isConnected = _useState2[0],\n      setIsConnected = _useState2[1];\n\n  if (!isConnected) {\n    (0, _user.getUserStorage)().then(function (data) {\n      if (data) {\n        console.log(data);\n        setIsConnected(function (state) {\n          return !state;\n        });\n      }\n    });\n  }\n\n  var addfilm = function addfilm() {\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_addFilm.default, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }\n    }));\n  };\n\n  var listFilm = function listFilm() {\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_ListFilm.default, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }\n    }));\n  };\n\n  var profil = function profil() {\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_profil.default, {\n      setIsConnected: setIsConnected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }\n    }));\n  };\n\n  var login = function login() {\n    return _react.default.createElement(_login.default, {\n      setIsConnected: setIsConnected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    });\n  };\n\n  if (!isConnected) {\n    return _react.default.createElement(Stack.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(Stack.Screen, {\n      name: \"landing\",\n      component: _landing.default,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), _react.default.createElement(Stack.Screen, {\n      name: \"login\",\n      component: login,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), _react.default.createElement(Stack.Screen, {\n      name: \"registeur\",\n      component: _registeur.default,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return _react.default.createElement(Tab.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, _react.default.createElement(Tab.Screen, {\n    name: \"ListFilm\",\n    options: {\n      tabBarLabel: \"ListFilm\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return _react.default.createElement(_MaterialCommunityIcons.default, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    component: listFilm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"addFilm\",\n    options: {\n      tabBarLabel: \"addFilm\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return _react.default.createElement(_MaterialCommunityIcons.default, {\n          name: \"bell\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    component: addfilm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Profil\",\n    options: {\n      tabBarLabel: \"addFilm\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return _react.default.createElement(_MaterialCommunityIcons.default, {\n          name: \"bell\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    component: profil,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _default = Main;\nexports.default = _default;","map":{"version":3,"sources":["/Users/evan/dev/react/react-native/default/src/index.jsx"],"names":["Stack","Tab","Main","isConnected","setIsConnected","then","data","console","log","state","addfilm","listFilm","profil","login","Landing","Registeur","tabBarLabel","tabBarIcon","color","size"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport ListFilm from \"./view/ListFilm\";\nimport AddFilm from \"./view/addFilm\";\nimport Landing from \"./view/landing\";\nimport Login from \"./view/login\";\nimport Registeur from \"./view/registeur\";\nimport { getUserStorage } from \"./helper/user.storage\";\nimport Profil from \"./view/profil\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst Main = () => {\n\n  \n  const [isConnected, setIsConnected]= useState(false);\n  if(!isConnected){\n    getUserStorage().then((data) =>{\n      if(data){\n        console.log(data)\n        setIsConnected(state=>!state)\n      }\n    });\n  }\n  \n  const addfilm=()=>(<><AddFilm /></>);\n  const listFilm =()=>(<><ListFilm /></>);\n  const profil = () => (<><Profil setIsConnected={setIsConnected}/></>)\n  const login = ()=>(<Login setIsConnected={setIsConnected}/>);\n  \n  if(!isConnected){\n    return(\n      <Stack.Navigator>\n        <Stack.Screen name=\"landing\" component={Landing}/>\n        <Stack.Screen name=\"login\" component={login}/>\n        <Stack.Screen name=\"registeur\" component={Registeur}/>\n      </Stack.Navigator>\n    )\n  }\n  \n  return (\n   <Tab.Navigator>\n      <Tab.Screen\n        name=\"ListFilm\"\n        options={{\n          tabBarLabel: \"ListFilm\",\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n          ),\n        }}\n        component={listFilm}\n      />\n      <Tab.Screen name=\"addFilm\" \n      options={{\n        tabBarLabel: \"addFilm\",\n        tabBarIcon: ({ color, size }) => (\n          <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\n        ),\n      }}component={addfilm} />\n      <Tab.Screen name=\"Profil\" \n      options={{\n        tabBarLabel: \"addFilm\",\n        tabBarIcon: ({ color, size }) => (\n          <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\n        ),\n      }}component={profil} />\n    </Tab.Navigator>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"script"}