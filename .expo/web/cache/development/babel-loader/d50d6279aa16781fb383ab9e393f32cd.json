{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ListFilm;\n\nvar _reactQuery = require(\"react-query\");\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _ActivityIndicator = _interopRequireDefault(require(\"react-native-web/dist/exports/ActivityIndicator\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _SafeAreaView = _interopRequireDefault(require(\"react-native-web/dist/exports/SafeAreaView\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"react-native-web/dist/exports/ScrollView\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _todo = _interopRequireDefault(require(\"../components/todo\"));\n\nvar filmService = _interopRequireWildcard(require(\"../service/film.service\"));\n\nvar _jsxFileName = \"/Users/evan/dev/react/react-native/default/src/view/ListFilm.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ListFilm() {\n  var _this = this;\n\n  var _useQuery = (0, _reactQuery.useQuery)('Films', filmService.findAll),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  if (isLoading) {\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_View.default, {\n      style: styles.containspinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_ActivityIndicator.default, {\n      size: \"large\",\n      color: \"#0000ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_SafeAreaView.default, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_ScrollView.default, {\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_View.default, {\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, data && data.map(function (item, index) {\n    return _react.default.createElement(_todo.default, {\n      item: item,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    });\n  })), _react.default.createElement(_Text.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, data.length))));\n}\n\nvar styles = _StyleSheet.default.create({\n  containspinner: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/evan/dev/react/react-native/default/src/view/ListFilm.jsx"],"names":["ListFilm","filmService","findAll","isLoading","isError","data","error","styles","containspinner","container","scrollView","map","item","index","length","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","flexWrap","button","backgroundColor","padding"],"mappings":";;;;;;;AACA;;;;;;;;;;;;;;AAEA;;AACA;;AAGA;;;;;;;;AAMe,SAASA,QAAT,GAAoB;AAAA;;AAEjC,kBAA0C,0BAAS,OAAT,EAAkBC,WAAW,CAACC,OAA9B,CAA1C;AAAA,MAAOC,SAAP,aAAOA,SAAP;AAAA,MAAkBC,OAAlB,aAAkBA,OAAlB;AAAA,MAA2BC,IAA3B,aAA2BA,IAA3B;AAAA,MAAiCC,KAAjC,aAAiCA,KAAjC;;AACA,MAAGH,SAAH,EAAa;AACX,WACE,4DAEE,6BAAC,aAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,0BAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AASD;;AACD,SACE,4DACE,6BAAC,qBAAD;AAAc,IAAA,KAAK,EAAED,MAAM,CAACE,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mBAAD;AAAY,IAAA,8BAA8B,EAAE,KAA5C;AAAmD,IAAA,4BAA4B,EAAE,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,IAAIA,IAAI,CAACM,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,WAChB,6BAAC,aAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,GAAG,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAT,CADb,CADF,EAOA,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,IAAI,CAACS,MAAZ,CAPA,CADF,CADF,CADF;AAeD;;AAED,IAAMP,MAAM,GAAGQ,oBAAWC,MAAX,CAAkB;AAC/BR,EAAAA,cAAc,EAAC;AACbS,IAAAA,IAAI,EAAC,CADQ;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADgB;AAM/BV,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE;AADG,GANoB;AAS/BP,EAAAA,UAAU,EAAE;AACVU,IAAAA,aAAa,EAAE,KADL;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GATmB;AAa/BC,EAAAA,MAAM,EAAE;AACNH,IAAAA,UAAU,EAAE,QADN;AAENI,IAAAA,eAAe,EAAE,SAFX;AAGNC,IAAAA,OAAO,EAAE;AAHH;AAbuB,CAAlB,CAAf","sourcesContent":["\nimport { useQuery } from 'react-query'\nimport { View,ActivityIndicator, Text, SafeAreaView, ScrollView, StyleSheet } from 'react-native';\nimport React from 'react';\nimport Todo from '../components/todo';\n\n\nimport * as filmService from '../service/film.service';\n\n\n\n\n\nexport default function ListFilm() {\n\n  const {isLoading, isError, data, error} = useQuery('Films', filmService.findAll)\n  if(isLoading){\n    return(\n      <>\n        \n        <View style={styles.containspinner}>\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n        </View>\n      </>\n      \n    )\n  }\n  return (\n    <>\n      <SafeAreaView style={styles.container}>\n        <ScrollView showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false}>\n          <View style={styles.scrollView}>\n              {data && data.map((item, index)=>(\n                <Todo item={item} key={index}/>\n              ))}\n          </View>\n          \n        <Text>{data.length}</Text>\n        </ScrollView>\n      </SafeAreaView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  containspinner:{\n    flex:1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*export default function Home() {\n\n    const [minutes, setMinutes] = useState(20);\n  const [seconds, setSeconds] = useState(0);\n  const [displayMessage, setDisplayMessage] = useState(false);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let minutes = displayMessage ? 24 : 4;\n          let seconds = 59;\n\n          setSeconds(seconds);\n          setMinutes(minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  \n\n    return (\n        <View>\n            <Text>{timerMinutes + \" : \" + timerSeconds}</Text>\n            <Button\n  onPress={() => setisStart(true)}\n  title=\"Learn More\"\n  color=\"#841584\"\n/>\n        </View>\n    )\n}\n     */"]},"metadata":{},"sourceType":"script"}