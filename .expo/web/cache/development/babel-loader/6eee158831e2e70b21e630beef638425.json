{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = FilmImage;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _index = require(\"react-native-web/dist/index\");\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"react-native-web/dist/exports/ScrollView\"));\n\nvar _TextInput = _interopRequireDefault(require(\"react-native-web/dist/exports/TextInput\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar filmService = _interopRequireWildcard(require(\"../service/film.service\"));\n\nvar _Errer = _interopRequireDefault(require(\"../../assets/Errer.jpeg\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _jsxFileName = \"/Users/evan/dev/react/react-native/default/src/components/filmImage.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction FilmImage(_ref) {\n  var _this = this;\n\n  var isActive = _ref.isActive,\n      data = _ref.data,\n      setUrl = _ref.setUrl,\n      url = _ref.url;\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isInput = _useState2[0],\n      setIsInput = _useState2[1];\n\n  if (isActive) {\n    return _react.default.createElement(_Text.default, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, \"entre un nom\");\n  }\n\n  console.log(data);\n  return _react.default.createElement(_View.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Text.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"choisi ton image : \"), _react.default.createElement(_ScrollView.default, {\n    showsHorizontalScrollIndicator: false,\n    horizontal: true,\n    style: style.contenaire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, isInput ? _react.default.createElement(_react.default.Fragment, null, data && data.results.map(function (item, index) {\n    console.log(\"*****item*****\");\n    console.log(item);\n    var imgUrl = \"https://image.tmdb.org/t/p/w300\" + item.backdrop_path;\n    return _react.default.createElement(_TouchableOpacity.default, {\n      onPress: function onPress() {\n        return setUrl(imgUrl);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, _react.default.createElement(_Image.default, {\n      style: style.image,\n      key: index,\n      source: item.backdrop_path ? {\n        uri: imgUrl\n      } : _Errer.default,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }));\n  })) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_TextInput.default, {\n    onChangeText: function onChangeText(value) {\n      return setUrl(value);\n    },\n    value: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }))));\n}\n\nvar style = _StyleSheet.default.create({\n  contenaire: {\n    flexDirection: \"row\"\n  },\n  image: {\n    width: 150,\n    height: 120,\n    margin: 12\n  }\n});","map":{"version":3,"sources":["/Users/evan/dev/react/react-native/default/src/components/filmImage.jsx"],"names":["FilmImage","isActive","data","setUrl","url","isInput","setIsInput","console","log","style","contenaire","results","map","item","index","imgUrl","backdrop_path","image","uri","errorImg","value","StyleSheet","create","flexDirection","width","height","margin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;;;;;;;AAKe,SAASA,SAAT,OAAkD;AAAA;;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,MAAc,QAAdA,MAAc;AAAA,MAANC,GAAM,QAANA,GAAM;;AAC7D,kBAA8B,qBAAS,IAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAGL,QAAH,EAAY;AACR,WACI,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEF,SACE,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEE,6BAAC,mBAAD;AAAY,IAAA,8BAA8B,EAAE,KAA5C;AACgB,IAAA,UAAU,EAAE,IAD5B;AACkC,IAAA,KAAK,EAAEO,KAAK,CAACC,UAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGL,OAAO,GACJ,4DACKH,IAAI,IAAIA,IAAI,CAACS,OAAL,CAAaC,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvCP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,QAAME,MAAM,uCAAqCF,IAAI,CAACG,aAAtD;AAEA,WACI,6BAAC,yBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMb,MAAM,CAACY,MAAD,CAAZ;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,6BAAC,cAAD;AACI,MAAA,KAAK,EAAEN,KAAK,CAACQ,KADjB;AAEI,MAAA,GAAG,EAAEH,KAFT;AAGI,MAAA,MAAM,EAAGD,IAAI,CAACG,aAAN,GAAqB;AAACE,QAAAA,GAAG,EAAEH;AAAN,OAArB,GAAoCI,cAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQE,GAbG,CADb,CADI,GAmBJ,4DACC,6BAAC,kBAAD;AAAW,IAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,aAAWjB,MAAM,CAACiB,KAAD,CAAjB;AAAA,KAAzB;AAAmD,IAAA,KAAK,EAAEhB,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CArBN,CAFF,CADF;AAgCD;;AAGD,IAAMK,KAAK,GAAGY,oBAAWC,MAAX,CAAkB;AAC5BZ,EAAAA,UAAU,EAAC;AACPa,IAAAA,aAAa,EAAE;AADR,GADiB;AAI5BN,EAAAA,KAAK,EAAC;AACFO,IAAAA,KAAK,EAAE,GADL;AAEFC,IAAAA,MAAM,EAAE,GAFN;AAGFC,IAAAA,MAAM,EAAE;AAHN;AAJsB,CAAlB,CAAd","sourcesContent":["import { View, Text, LisetView, StyleSheet, Image, ScrollView, TextInput } from 'react-native';\nimport React, {useState, useEffect} from 'react';\nimport * as filmService from \"../service/film.service\";\nimport errorImg from '../../assets/Errer.jpeg';\nimport { TouchableOpacity } from 'react-native-web';\n\n\n\nexport default function FilmImage({isActive, data, setUrl, url}) {\n    const [isInput, setIsInput] = useState(true)\n    if(isActive){\n        return(\n            <Text>entre un nom</Text>\n        )\n    }\n    console.log(data)\n\n  return (\n    <View>\n        <Text>choisi ton image : </Text>\n      <ScrollView showsHorizontalScrollIndicator={false}\n                      horizontal={true} style={style.contenaire}>\n        {isInput?(\n            <>\n                {data && data.results.map((item, index) => {\n                    console.log(\"*****item*****\")\n                    console.log(item);\n                    const imgUrl = `https://image.tmdb.org/t/p/w300${item.backdrop_path}`\n                    \n                    return(\n                        <TouchableOpacity onPress={() => setUrl(imgUrl)}>\n                            <Image\n                                style={style.image}\n                                key={index}\n                                source={(item.backdrop_path)?{uri: imgUrl}: errorImg}\n                            />\n                        </TouchableOpacity>\n                    )}\n                )}\n            </>\n        ):(\n            <>\n             <TextInput onChangeText={(value) => setUrl(value)} value={url}/>\n            </>\n        )}\n        \n      </ScrollView>\n    </View>\n  );\n}\n\n\nconst style = StyleSheet.create({\n    contenaire:{\n        flexDirection: \"row\"\n    },\n    image:{\n        width: 150,\n        height: 120,\n        margin: 12\n    }\n})"]},"metadata":{},"sourceType":"script"}