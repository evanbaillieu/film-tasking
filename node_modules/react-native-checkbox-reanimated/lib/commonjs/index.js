"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));

var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));

var _animatedStroke = _interopRequireDefault(require("./animated-stroke"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const MARGIN = 10;
const vWidth = 64 + MARGIN;
const vHeight = 64 + MARGIN;
const checkMarkPath = 'M15 31.1977C23.1081 36.4884 29.5946 43 29.5946 43C29.5946 43 37.5 25.5 69 1.5';
const outlineBoxPath = 'M24 0.5H40C48.5809 0.5 54.4147 2.18067 58.117 5.88299C61.8193 9.58532 63.5 15.4191 63.5 24V40C63.5 48.5809 61.8193 54.4147 58.117 58.117C54.4147 61.8193 48.5809 63.5 40 63.5H24C15.4191 63.5 9.58532 61.8193 5.88299 58.117C2.18067 54.4147 0.5 48.5809 0.5 40V24C0.5 15.4191 2.18067 9.58532 5.88299 5.88299C9.58532 2.18067 15.4191 0.5 24 0.5Z';

const AnimatedPath = _reactNativeReanimated.default.createAnimatedComponent(_reactNativeSvg.Path);

const AnimatedCheckbox = props => {
  const {
    checked,
    checkmarkColor,
    highlightColor,
    boxOutlineColor
  } = props;
  const progress = (0, _reactNativeReanimated.useSharedValue)(0);
  (0, _react.useEffect)(() => {
    progress.value = (0, _reactNativeReanimated.withTiming)(checked ? 1 : 0, {
      duration: checked ? 300 : 100,
      easing: _reactNativeReanimated.Easing.linear
    });
  }, [checked]);
  const animatedBoxProps = (0, _reactNativeReanimated.useAnimatedProps)(() => ({
    stroke: (0, _reactNativeReanimated.interpolateColor)(_reactNativeReanimated.Easing.bezier(0.16, 1, 0.3, 1)(progress.value), [0, 1], [boxOutlineColor, highlightColor], 'RGB'),
    fill: (0, _reactNativeReanimated.interpolateColor)(_reactNativeReanimated.Easing.bezier(0.16, 1, 0.3, 1)(progress.value), [0, 1], ['#00000000', highlightColor], 'RGB')
  }), [highlightColor, boxOutlineColor]);
  return /*#__PURE__*/_react.default.createElement(_reactNativeSvg.default, {
    viewBox: [-MARGIN, -MARGIN, vWidth + MARGIN, vHeight + MARGIN].join(' ')
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Defs, null, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.ClipPath, {
    id: "clipPath"
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Path, {
    fill: "white",
    stroke: "gray",
    strokeLinejoin: "round",
    strokeLinecap: "round",
    d: outlineBoxPath
  }))), /*#__PURE__*/_react.default.createElement(_animatedStroke.default, {
    progress: progress,
    d: checkMarkPath,
    stroke: highlightColor,
    strokeWidth: 10,
    strokeLinejoin: "round",
    strokeLinecap: "round",
    strokeOpacity: checked || false ? 1 : 0
  }), /*#__PURE__*/_react.default.createElement(AnimatedPath, {
    d: outlineBoxPath,
    strokeWidth: 7,
    strokeLinejoin: "round",
    strokeLinecap: "round",
    animatedProps: animatedBoxProps
  }), /*#__PURE__*/_react.default.createElement(_reactNativeSvg.G, {
    clipPath: "url(#clipPath)"
  }, /*#__PURE__*/_react.default.createElement(_animatedStroke.default, {
    progress: progress,
    d: checkMarkPath,
    stroke: checkmarkColor,
    strokeWidth: 10,
    strokeLinejoin: "round",
    strokeLinecap: "round",
    strokeOpacity: checked || false ? 1 : 0
  })));
};

var _default = AnimatedCheckbox;
exports.default = _default;
//# sourceMappingURL=index.js.map